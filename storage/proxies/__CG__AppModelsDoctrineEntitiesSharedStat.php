<?php

namespace DoctrineProxies\__CG__\App\Models\Doctrine\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SharedStat extends \App\Models\Doctrine\Entities\SharedStat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * {@inheritDoc}
     * @return array
     */
    public function __sleep()
    {
        $properties = array_merge(['__isInitialized__'], parent::__sleep());

        if ($this->__isInitialized__) {
            $properties = array_diff($properties, array_keys($this->__getLazyProperties()));
        }

        return $properties;
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SharedStat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updated_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt($deleted_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deleted_at]);

        return parent::setDeletedAt($deleted_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescricao($descricao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescricao', [$descricao]);

        return parent::setDescricao($descricao);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescricao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescricao', []);

        return parent::getDescricao();
    }

    /**
     * {@inheritDoc}
     */
    public function addCostAllocateSharedStat(\App\Models\Doctrine\Entities\CostAllocateSharedStat $costAllocateSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCostAllocateSharedStat', [$costAllocateSharedStat]);

        return parent::addCostAllocateSharedStat($costAllocateSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCostAllocateSharedStat(\App\Models\Doctrine\Entities\CostAllocateSharedStat $costAllocateSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCostAllocateSharedStat', [$costAllocateSharedStat]);

        return parent::removeCostAllocateSharedStat($costAllocateSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCostAllocateSharedStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCostAllocateSharedStats', []);

        return parent::getCostAllocateSharedStats();
    }

    /**
     * {@inheritDoc}
     */
    public function addItemOrderSharedStat(\App\Models\Doctrine\Entities\ItemOrderSharedStat $itemOrderSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addItemOrderSharedStat', [$itemOrderSharedStat]);

        return parent::addItemOrderSharedStat($itemOrderSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeItemOrderSharedStat(\App\Models\Doctrine\Entities\ItemOrderSharedStat $itemOrderSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeItemOrderSharedStat', [$itemOrderSharedStat]);

        return parent::removeItemOrderSharedStat($itemOrderSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemOrderSharedStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemOrderSharedStats', []);

        return parent::getItemOrderSharedStats();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderSharedStat(\App\Models\Doctrine\Entities\OrderSharedStat $orderSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderSharedStat', [$orderSharedStat]);

        return parent::addOrderSharedStat($orderSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderSharedStat(\App\Models\Doctrine\Entities\OrderSharedStat $orderSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderSharedStat', [$orderSharedStat]);

        return parent::removeOrderSharedStat($orderSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderSharedStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderSharedStats', []);

        return parent::getOrderSharedStats();
    }

    /**
     * {@inheritDoc}
     */
    public function addPartnerSharedStat(\App\Models\Doctrine\Entities\PartnerSharedStat $partnerSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPartnerSharedStat', [$partnerSharedStat]);

        return parent::addPartnerSharedStat($partnerSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function removePartnerSharedStat(\App\Models\Doctrine\Entities\PartnerSharedStat $partnerSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePartnerSharedStat', [$partnerSharedStat]);

        return parent::removePartnerSharedStat($partnerSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartnerSharedStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartnerSharedStats', []);

        return parent::getPartnerSharedStats();
    }

    /**
     * {@inheritDoc}
     */
    public function addProductSharedStat(\App\Models\Doctrine\Entities\ProductSharedStat $productSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProductSharedStat', [$productSharedStat]);

        return parent::addProductSharedStat($productSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProductSharedStat(\App\Models\Doctrine\Entities\ProductSharedStat $productSharedStat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProductSharedStat', [$productSharedStat]);

        return parent::removeProductSharedStat($productSharedStat);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductSharedStats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductSharedStats', []);

        return parent::getProductSharedStats();
    }

}
